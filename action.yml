name: 'setup services jenkins container and install jenkins-cli.jar'
description: 'Setup services jenkins container and install jenkins-cli.jar.'
author: 'srz_zumix'
inputs:
  service_id:
    description: "jenkins service container id"
    required: true
  port:
    description: "jenkins service container port"
    default: '8080'
    required: false
  plugin_files:
    description: "install plugin list file"
    default: ''
    required: false
runs:
  using: "composite"
  steps:
    - name: Wait Launch Jenkins
      shell: bash
      run: |
        until docker logs "${{ inputs.service_id }}" 2>&1 | grep "Jenkins is fully up and running"; do
          sleep 30; echo "waiting..."
        done
        docker logs "${{ inputs.service_id }}"
    - name: Setup CLI
      shell: bash
      env: 
        JENKINS_URL: http://localhost:${{ inputs.port }}
      run: "$GITHUB_ACTION_PATH/setup-cli.sh"
    - name: Install Jenkins Plugins
      shell: bash
      if: ${{ inputs.plugin_files }} != ""
      run: |
        if [ -f "${{ inputs.plugin_files }}" ]; then
          xargs -I{} java -jar "${{ runner.temp }}/jenkins-cli.jar" -s "http://localhost:${{ inputs.port }}" install-plugin {} < "${{ inputs.plugin_files }}"
        fi
    - name: Get session-id
      id: session-id
      shell: bash
      run: |
        echo "##[set-output name=before;]$(java -jar jenkins-cli.jar -s "http://localhost:${{ inputs.port }}" session-id)"          
    - name: Restart Jenkins
      shell: bash
      run: |
        java -jar jenkins-cli.jar -s "http://localhost:${{ inputs.port }}" restart
    - name: Wait restart
      shell: bash
      run: |
        until java -jar jenkins-cli.jar -s "http://localhost:${{ inputs.port }}" session-id 2>/dev/null; do
          sleep 30; echo "waiting..."
        done
        while java -jar jenkins-cli.jar -s "http://localhost:${{ inputs.port }}" session-id | grep "${{ steps.session-id.outputs.before }}"; do
          sleep 30; echo "waiting..."
        done

branding:
  icon: 'settings'
  color: 'yellow'
