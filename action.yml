name: 'setup-service-jenkins'
description: 'Setup services jenkins container and install jenkins-cli wrapper.'
author: 'srz_zumix'
inputs:
  id:
    description: "jenkins service container id"
    required: true
  port:
    description: "jenkins service container port"
    default: '8080'
    required: false
  plugins:
    description: "install plugin list"
    default: ''
    required: false
  plugins_file:
    description: "install plugin list file. (.txt or .yaml|yml)"
    default: ''
    required: false
  install_suggested_plugins:
    description: "install suggested plugins"
    default: false
    required: false
  jcasc_path:
    description: "Jenkins Configuration as Code YAML path. (directory or file)"
    default: ''
    required: false
  github_token:
    description: 'GITHUB_TOKEN add to jenkins credential. (id = github_token)'
    default: ''
    required: false
runs:
  using: "composite"
  steps:
    - name: Initial SetUp
      shell: bash
      env:
        JENKINS_URL: http://localhost:${{ inputs.port }}
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/setup-initial.sh"
    - name: Wait Launch Jenkins
      shell: bash
      env:
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/wait-launch.sh"
    - name: Setup CLI
      shell: bash
      env: 
        JENKINS_URL: http://localhost:${{ inputs.port }}
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/setup-cli.sh"
    - name: Install Jenkins Suggested Plugins
      shell: bash
      env:
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/install-plugins.sh" "${GITHUB_ACTION_PATH}/resources/DefaultJenkinsPlugins.txt"
      if: "inputs.install_suggested_plugins == 'true'"
    - name: Install Jenkins Plugins
      shell: bash
      env:
        JENKINS_SERVICE_ID: ${{ inputs.id }}
        INSTALL_PLUGINS: ${{ inputs.plugins }}
      run: |
        "${GITHUB_ACTION_PATH}/install-plugins-fromenv.sh"
      if: "inputs.plugins != ''"
    - name: Install Jenkins Plugins from file
      shell: bash
      env:
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/install-plugins.sh" "${{ inputs.plugins_file }}"
      if: "inputs.plugins_file != ''"
    - name: Restart Jenkins
      shell: bash
      env:
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/restart-and-wait.sh"
      if: >
        inputs.plugins_file != '' &&
        inputs.plugins != '' && 
        inputs.install_suggested_plugins == 'true'
    - name: Setup JCasC
      shell: bash
      if: "inputs.jcasc_path != ''"
      env: 
        JENKINS_URL: http://localhost:${{ inputs.port }}
        JCASC_PATH: ${{ inputs.jcasc_path }}
        JENKINS_SERVICE_ID: ${{ inputs.id }}
      run: |
        "${GITHUB_ACTION_PATH}/setup-jcasc.sh"
    - name: Setup GitHub Token Credentials
      shell: bash
      if: "inputs.github_token != ''"
      run: |
        jenkins-credential -c UsernamePasswordCredentials -i github_token -- -u x-access-token -p ${{ inputs.github_token }}

branding:
  icon: 'settings'
  color: 'yellow'
